// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reisplanningssysteem_DAL;

#nullable disable

namespace Reisplanningssysteem_DAL.Migrations
{
    [DbContext(typeof(ReisplanningssysteemContext))]
    [Migration("20230321210622_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("RPS")
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Reisplanningssysteem_Models.Bestemming", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Bestemmingen", "RPS");
                });

            modelBuilder.Entity("Reisplanningssysteem_Models.Boeking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GebruikerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InschrijvingsDatum")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsMonitor")
                        .HasColumnType("bit");

                    b.Property<int>("ReisId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("GebruikerId");

                    b.HasIndex("ReisId");

                    b.ToTable("Boekingen", "RPS");
                });

            modelBuilder.Entity("Reisplanningssysteem_Models.Cursus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Cursussen", "RPS");
                });

            modelBuilder.Entity("Reisplanningssysteem_Models.Gebruiker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Achternaam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("BasisCursus")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GemeenteId")
                        .HasColumnType("int");

                    b.Property<bool>("HoofmonitorCursus")
                        .HasColumnType("bit");

                    b.Property<string>("Huisnummer")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsLid")
                        .HasColumnType("bit");

                    b.Property<string>("Straat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoonNr")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("GemeenteId");

                    b.ToTable("Gebruikers", "RPS");
                });

            modelBuilder.Entity("Reisplanningssysteem_Models.GebruikerCursus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CursusId")
                        .HasColumnType("int");

                    b.Property<int>("GebruikerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CursusId");

                    b.HasIndex("GebruikerId");

                    b.ToTable("GebruikersCursusen", "RPS");
                });

            modelBuilder.Entity("Reisplanningssysteem_Models.Gemeente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Gemeenten", "RPS");
                });

            modelBuilder.Entity("Reisplanningssysteem_Models.LeeftijdsCategorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LeeftijdMaximum")
                        .HasColumnType("int");

                    b.Property<int>("LeeftijdMinimum")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("LeeftijdsCategorieën", "RPS");
                });

            modelBuilder.Entity("Reisplanningssysteem_Models.Onkost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Bedrag")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Omschrijving")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ReisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReisId");

                    b.ToTable("Onkosten", "RPS");
                });

            modelBuilder.Entity("Reisplanningssysteem_Models.Reis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BeginDatum")
                        .HasColumnType("datetime2");

                    b.Property<int>("BestemmingsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EindDatum")
                        .HasColumnType("datetime2");

                    b.Property<int>("HoofdmonitorId")
                        .HasColumnType("int");

                    b.Property<int>("LeeftijdsCategorieId")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Prijs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ThemaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BestemmingsId");

                    b.HasIndex("HoofdmonitorId");

                    b.HasIndex("LeeftijdsCategorieId");

                    b.HasIndex("ThemaId");

                    b.ToTable("Reizen", "RPS");
                });

            modelBuilder.Entity("Reisplanningssysteem_Models.Thema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Themas", "RPS");
                });

            modelBuilder.Entity("Reisplanningssysteem_Models.Boeking", b =>
                {
                    b.HasOne("Reisplanningssysteem_Models.Gebruiker", "Gebruiker")
                        .WithMany("Boekingen")
                        .HasForeignKey("GebruikerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Reisplanningssysteem_Models.Reis", "Reis")
                        .WithMany("Boekingen")
                        .HasForeignKey("ReisId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Gebruiker");

                    b.Navigation("Reis");
                });

            modelBuilder.Entity("Reisplanningssysteem_Models.Gebruiker", b =>
                {
                    b.HasOne("Reisplanningssysteem_Models.Gemeente", "Gemeente")
                        .WithMany("Gebruikers")
                        .HasForeignKey("GemeenteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Gemeente");
                });

            modelBuilder.Entity("Reisplanningssysteem_Models.GebruikerCursus", b =>
                {
                    b.HasOne("Reisplanningssysteem_Models.Cursus", "Cursus")
                        .WithMany("GebruikerCursussen")
                        .HasForeignKey("CursusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reisplanningssysteem_Models.Gebruiker", "Gebruiker")
                        .WithMany("GebruikerCursussen")
                        .HasForeignKey("GebruikerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cursus");

                    b.Navigation("Gebruiker");
                });

            modelBuilder.Entity("Reisplanningssysteem_Models.Onkost", b =>
                {
                    b.HasOne("Reisplanningssysteem_Models.Reis", "Reis")
                        .WithMany("Onkosten")
                        .HasForeignKey("ReisId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Reis");
                });

            modelBuilder.Entity("Reisplanningssysteem_Models.Reis", b =>
                {
                    b.HasOne("Reisplanningssysteem_Models.Bestemming", "Bestemming")
                        .WithMany("Reizen")
                        .HasForeignKey("BestemmingsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Reisplanningssysteem_Models.Gebruiker", "Hoofdmonitor")
                        .WithMany("Reizen")
                        .HasForeignKey("HoofdmonitorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Reisplanningssysteem_Models.LeeftijdsCategorie", "LeeftijdsCategorie")
                        .WithMany("Reizen")
                        .HasForeignKey("LeeftijdsCategorieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Reisplanningssysteem_Models.Thema", "Thema")
                        .WithMany("Reizen")
                        .HasForeignKey("ThemaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Bestemming");

                    b.Navigation("Hoofdmonitor");

                    b.Navigation("LeeftijdsCategorie");

                    b.Navigation("Thema");
                });

            modelBuilder.Entity("Reisplanningssysteem_Models.Bestemming", b =>
                {
                    b.Navigation("Reizen");
                });

            modelBuilder.Entity("Reisplanningssysteem_Models.Cursus", b =>
                {
                    b.Navigation("GebruikerCursussen");
                });

            modelBuilder.Entity("Reisplanningssysteem_Models.Gebruiker", b =>
                {
                    b.Navigation("Boekingen");

                    b.Navigation("GebruikerCursussen");

                    b.Navigation("Reizen");
                });

            modelBuilder.Entity("Reisplanningssysteem_Models.Gemeente", b =>
                {
                    b.Navigation("Gebruikers");
                });

            modelBuilder.Entity("Reisplanningssysteem_Models.LeeftijdsCategorie", b =>
                {
                    b.Navigation("Reizen");
                });

            modelBuilder.Entity("Reisplanningssysteem_Models.Reis", b =>
                {
                    b.Navigation("Boekingen");

                    b.Navigation("Onkosten");
                });

            modelBuilder.Entity("Reisplanningssysteem_Models.Thema", b =>
                {
                    b.Navigation("Reizen");
                });
#pragma warning restore 612, 618
        }
    }
}
